{
  "metadata": {
    "source_document": "DIT171.pdf",
    "course_code": "DIT171",
    "course_title": "Parallel and Distributed Real-Time Systems",
    "swedish_title": "Parallel and Distributed Real-Time Systems",
    "department": "Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "",
    "specialization": "A1F, Second cycle, has second-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2006-11-17",
    "valid_from_date": "2007-09-01",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Computer Science, Bachelor's Programme (N1COS)",
      "No translation available (NDATM)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by The IT Faculty Board on 2006-11-17 to be valid\nfrom 2007-09-01.",
    "Position in the educational system": "The course is a part of the Computer Science Masters programme and an elective course\nat the University of Gothenburg.\nThe level for the course in relation to degree requirements is Master's degree, code A1F.\nThe course has course/courses at second cycle level as entry requirements.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Computer Science, Bachelor's Programme (N1COS) and 3)\nNo translation available (NDATM)",
    "Entry requirements": "To be eligible for the course\nstudents should have successfully completed two years studies within the subject\nComputer Science or equivalent. Preparatory courses in real-time systems, algorithms,\noperating systems and computer architecture are required.",
    "Learning outcomes": "After completing the course the student is expected to be able to:\n• Formulate requirements for computer systems used in time- and safety critical\napplications.\n• Master the terminology of scheduling and Complexity theory.\n• Describe the principles and mechanisms used for scheduling of task execution and\ndata communication in real-time systems.\n• Derive performance for; and be familiar with the theoretical performance limitations\nof; a given real-time system.",
    "Course content": "Real-time systems play a vital role in many application domains including drive-by-wire\nautomotive systems, intelligent traffic control systems, banking systems, and\nautonomous robots. For many real-time applications, the system must be designed with\nmultiple processors in order to meet imposed application constraints. Such situations\ncan occur when tasks need to be physically distributed (as in a fault-tolerant vehicle\nbraking system) or when the inherent parallelism of the application need to be fully\nexploited (as in a high-performance multimedia application). This course is intended to\ngive a deeper understanding of the problems involved in designing real-time systems\nbased on multiprocessor architectures. Specifically, the course covers the following\ntopics:\n• Background: motivation for; and definition of; real-time computing systems.\n• Characteristics of real-time systems: application constraints; Design methods; task\nmodels; run-time mechanisms; architectures.\n• Evaluation of real-time systems: performance measures; Evaluation methodologies.\n• Single and multiprocessor scheduling: problem definition; terminology; and\nalgorithms.\n• Complexity theory and NP-completeness in the context of real-time scheduling.\n• real-time communications: protocols and end-to-end delay guarantees.\n• Fault-tolerance techniques for real-time systems: models; algorithms and\narchitectures.\n• Distributed clock synchronization.\n• Estimation of task execution times.\nThe course is organized around a series of lectures with weekly consultation sessions,\ntwo homework assignments and a final exam.",
    "Sub-courses": "",
    "Form of teaching": "Language of instruction: English\nThe course is held in English.",
    "Assessment": "Granting a High Pass requires approval of a second teacher (entitled to be thesis\nexaminer). A student who has failed a test twice has the right to change examiner, unless\nweighty argument can be adduced. A written application should be sent to the\nDepartment.",
    "Grades": "The grading scale comprises: Fail, Pass.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire can be used\nto ensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.",
    "Additional information": ""
  }
}