{
  "metadata": {
    "source_document": "DIT544.pdf",
    "course_code": "DIT544",
    "course_title": "Advanced Software Architecture",
    "swedish_title": "Avancerad mjukvaruarkitektur",
    "department": "Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Software Engineering, Computer Science-Software Engineering and Tech",
    "specialization": "A1F, Second cycle, has second-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2013-02-11",
    "valid_from_date": "2017-08-20",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Software Engineering Master's Programme (N2SOM)",
      "Software Engineering and Management Master's Programme (N2SOF)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2013-02-11 and was last revised on 2017-06-07 to be valid from 2017-08-\n20, autumn semester of 2017.",
    "Position in the educational system": "The course is a part of Software Engineering Master's Programme and Computer\nScience Master's Programme. The course is also a single subject course at the University\nof Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Applied Data Science Master's Programme (N2ADS), 3)\nSoftware Engineering Master's Programme (N2SOM) and 4) Software Engineering and\nManagement Master's Programme (N2SOF)",
    "Entry requirements": "The requirement for the course is to have completed two years of studies within the\nsubject Computer Science or Software engineering or equivalent. Successful completion\nof a course in the area of software architecture (DIT945 Model Driven software\ndevelopment or similar) is required.\nEnglish B level or English proficiency equivalent to IELTS 6.5 no part under 5.5 or\nTOEFL 575 p, TWE score 4.5 is also required.",
    "Learning outcomes": "After completion of the course the student is expected to be able to\n1. Knowledge and understanding\n- describe the importance of predictive architecting early in the system life-cycle\n- state/describe the applicability of model-based approaches\n- describe the intentionality of models throughout the system life-cycle\n- describe/state the characteristics and challenges of architecting system-of-systems and\nultra-large-scale systems\n- distinguish between software architecture, enterprise architecture, system architecture,\nand run-time architectures.\n- explain the link between business strategy, business process and system- and software\narchitecture\n- know of available tools for supporting architecture modelling and analysis\n- explain the role of architecture as a central artefact in system development\n2. Skills and abilities\n- describe inter-dependencies among quality-attributes\n- assess an architecture quantitatively and qualitatively\n- develop architectural models using ADLs,\n- conduct incremental and multi-fidelity architecture-centric modeling, verification, and\nvalidation\n- explain architectural models described in UML or ADL\n3. Judgement and approach\n- identify critical aspects of an architecture that requires, or benefits, to be modeled,\nverified and validated\n- trade-off architectural decisions and quality attributes\n- assess strengths and weaknesses of model-based approaches and methods",
    "Course content": "The course focuses on principles and methods that aid the designer/developer/architect\nto gain increased confidence in the architectural design. This includes architectural\npatterns, qualitative and quantitative assessment of architectures, quantitative\nmodelling using architecture description languages such as AADL and MARTE, and\nqualitative architecture evaluation methods, e.g., ATAM. Finally, the course will also\naddress the specific challenges related to scale, dynamics, and heterogeneity as found in\nsystem of systems, and ultra-large scale systems.",
    "Sub-courses": "",
    "Form of teaching": "The course is examined by an individual hall-exam (U-VG) and an individual project\n(U-VG), presented at a seminar. The student also has to participate in other student's\npresentation.\nIn addition, to pass the course the student must also produce an approved essay.\nA student who failed a same examination twice has the right to request of the\ndepartment a change of examiner. The request is to be in writing and submitted as soon\nas possible. The department is to grant such a request without undue delay.\nIn cases where a course has been discontinued or major changes have been made a\nstudent should be guaranteed at least three examination occasions (including the\nordinary examination occasion) during a time of at least one year from the last time the\ncourse was given.",
    "Assessment": "",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nIn order to be awarded the grade Pass for a full course, the exam and the project has to\nbe approved. In order to get Pass with Distinction as final grade, the exam and the\nproject has to be awarded with the grade Pass with Distinction. In both cases the essay\nhas to be approved.\nRegarding the application of ECTS scales, please see Vice-Chancellor's decision 2007-\n05-28, dnr G 8 1976/07.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. The outcome of the evaluations serves to improve the\ncourse by indication which parts could be added, improved, changed or removed.",
    "Additional information": "It is recommended the student to have basic knowledge in software engineering\ndevelopment (such as DIT270 Software engineering using formal methods) beforehand.\nThe course replaces the DIT542 Advanced Software Architecting course. The course\ncannot be included in a degree which contains DIT542. Neither can the course be\nincluded in a degree which is based on another degree in which the course DIT542 is\nincluded.\nThe course corresponds to the Advanced Software Architecture course at Chalmers."
  }
}