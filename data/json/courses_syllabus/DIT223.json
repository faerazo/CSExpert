{
  "metadata": {
    "source_document": "DIT223.pdf",
    "course_code": "DIT223",
    "course_title": "Computer Graphics",
    "swedish_title": "Datorgrafik",
    "department": "Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": [
      "Interaction Design",
      "Computer Science"
    ],
    "specialization": "A1N, Second cycle, has only first-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2017-02-13",
    "valid_from_date": "2017-10-15",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Game Design & Technology Master's Programme (N2GDT)",
      "Computer Science, Bachelor's Programme (N1COS)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2017-02-13 and was last revised on 2017-10-03 to be valid from 2017-10-\n15, autumn semester of 2017.",
    "Position in the educational system": "The course is part of the Computer Science Master's Programme. It is offered within the\nframework of several degree programmes and is also a single subject course at the\nUniversity of Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Applied Data Science Master's Programme (N2ADS), 3)\nGame Design & Technology Master's Programme (N2GDT) and 4) Computer Science,\nBachelor's Programme (N1COS)",
    "Entry requirements": "To be eligible for the course, students should have successfully completed courses\ncorresponding to 90 hec within the subject of Computer Science, including the following\ncourses:\n• 7.5 hec of linear algebra (MMGD20 or equivalent),\n• 7.5 hec in data structures (DIT960 or equivalent), and\n• 15 hec in imperative or object-oriented programing (DIT012 and DIT952, or\nequivalent).\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "On successful completion of the course the student will be able to:\nKnowledge and understanding\n• state and describe how computer graphics are implemented using a high-level\nprogramming language and a typical graphics API such as OpenGL,\n• state and describe the fundamental algorithms used to create computer graphics in\n3D-games and movies,\n• state how to utilize the functionality of dedicated hardware support for graphics\nthrough programming interfaces,\nCompetence and skills\n• implement algorithms to generate real-time renderings and, to some extent, photo\nrealistic renderings,\n• apply and restate the basic mathematics used for solving relevant subproblems,\nJudgement and approach\n• describe fundamental algorithms in 3D graphics and discriminate based on their\nsuitability and efficiency,\n• select suitable algorithms, data structures and methods for specific subproblems.",
    "Course content": "The course provides knowledge of the principles used to create images through\ncomputer algorithms. The primary focus is on real-time rendering and photo realistic\nrendering. The first part of the course covers real-time rendering, where techniques and\ndata structures for e.g. illumination, special effects, shadows and reflections will be\nstudied. Design of graphics hardware and speedup algorithms will also be treated. The\nsecond part focus on generating photo-realistic images and includes studying of ray\ntracing and global illumination. In addition, the corresponding mathematics will be\nrevealed. The course contains some programming tutorials, giving the students practical\nskills concerning programming for 3D-graphics.",
    "Sub-courses": "1. Laboratory work (Laboration), 1.5 higher education credits\nGrading scale: Pass (G) and Fail (U)\n2. Written examination (Tentamen), 6 higher education credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)",
    "Form of teaching": "Lectures and laborations.\nLanguage of instruction: English",
    "Assessment": "The course is examined by laborations done in pairs or individually, and a written exam\ndone individually in an examination hall.\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nIn order to receive the grade Pass (G) for a full course, the student needs to get the grade\nPass (G) on both the sub-courses. To be awarded Pass with Distinction (VG) for a full\ncourse, the student must, in addition, receive the grade VG on the sub-course Written\nexamination.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "The course replaces the course DIT220 Computer graphics. The course cannot be\nincluded in a degree which contains DIT220. Neither can the course be included in a\ndegree which is based on another degree in which the course DIT220 is included.\nThe course is a joint course together with Chalmers.\nCourse litterature to be announced the latest 8 weeks prior to the start of the course."
  }
}