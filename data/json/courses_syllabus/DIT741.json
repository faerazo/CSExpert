{
  "metadata": {
    "source_document": "DIT741.pdf",
    "course_code": "DIT741",
    "course_title": "Computational methods in bioinformatics",
    "swedish_title": "Beräkningsmetoder i bioinformatik",
    "department": "Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science, Computer Science-Algorithms and Logic",
    "specialization": "A1F, Second cycle, has second-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2014-10-24",
    "valid_from_date": "2017-08-20",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Computer Science, Bachelor's Programme (N1COS)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2014-10-24 and was last revised on 2017-06-16 to be valid from 2017-08-\n20, autumn semester of 2017.",
    "Position in the educational system": "The course is offered within the framework of several degree programmes. The course is\nalso a single subject course at the University of Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Applied Data Science Master's Programme (N2ADS) and 3)\nComputer Science, Bachelor's Programme (N1COS)",
    "Entry requirements": "To be eligible for the course the student should have successfully completed 90 hec of\nstudies within the subject Computer Science or equivalent. Furthermore, the student\nshould have successfully completed a course in Programming (DIT011 Object-oriented\nSoftware Development, DIT142 Functional programming or DIT950 Programming,\nAdvanced Course or equivalent) and in Discrete Mathematics (MMGD10 Introductory\nDiscrete Mathematics or equivalent). Applicants must prove knowledge of English:\nEnglish 6/English B or the equivalent level of an internationally recognized test, for\nexample TOEFL, IELTS.",
    "Learning outcomes": "After completion of the course, the student is expected to be able to:\nKnowledge and understanding\n• describe bioinformatics problems and computational approaches to solving them.\nSkills and abilities\n• implement computational solutions to problems in bioinformatics.\nJudgement and approach\n• summarise problems and methods described in research articles\n• critically discuss different methods that address the same task\n• identify situations where methods can be applied across different application areas",
    "Course content": "This course demonstrates how computational methods that have possibly been\npresented in other computing courses can be applied to solve problems in an application\narea.\nWe look at problems related to the analysis of biological sequence data (sequence\nbioinformatics) and macromolecular structures (structural bioinformatics). Computing\nscientists need to be able to understand problems that originate in areas that may be\nunfamiliar to them, and to identify computational methods and approaches that can be\nused to solve them. Biological concepts needed to understand the problems will be\nintroduced.\nThis is an advanced level course which uses research articles as the main reference\nmaterials. Reading research articles is valuable training for scientists and researchers.\nThese demonstrate how to present ideas and methods, and how to critically evaluate\nthem. Developing skill in reading research articles is useful preparation for future\nscientific investigations, and one's own scientific writing can improve through reading.\nComputational methods and concepts featured in this course include: dynamic\nprogramming; heuristic algorithms; graph partitioning; image skeletonisation,\nsmoothing and edge detection; clustering; sub-matrix matching; geometric hashing;\nconstraint logic programming; Monte Carlo optimisation; simulated annealing; self-\navoiding walks.\nBiological problems featured in this course include: sequence alignment; domain\nassignment; structure comparison; comparative modelling; protein folding; fold\nrecognition; finding channels; molecular docking; protein design.",
    "Sub-courses": null,
    "Form of teaching": "The teaching of this course will consist of lectures and literature studies.\nLanguage of instruction: English",
    "Assessment": "The course is examined by individual programming assignments, written assignments\nand oral presentations.\nA student who has failed two examinations on the same material has the right to request\na change of examiner. Such a request must be submitted to the Department in writing\nand shall be granted unless there are particular reasons not to do so.\nIn cases where a course has been discontinued or has undergone major changes, students\nmust be guaranteed at least three examination opportunities (including the regular\nopportunity) based on the previous content of the course for a period of at least one\nyear.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nThe grade G reflects fulfilment of the learning outcomes demonstrated by satisfactory\ncompletion of the assignments and oral presentation. Grade VG, requires a greater level\nof understanding, insight and reflection.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed. The\nresults of and possible changes to the course will be shared with students who\nparticipated in the evaluation and students who are starting the course. The results of\nand possible changes to the course will be shared with students who participated in the\nevaluation and students who are starting the course.",
    "Additional information": "The course is a joint course together with Chalmers.\nIt is recommended to have taken an introductory course in data structures beforehand.\nFamiliarity with some basic chemistry concepts (including atoms and molecules,\nchemical bonding) is useful."
  }
}