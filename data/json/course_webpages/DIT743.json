{
  "metadata": {
    "source_document": "DIT743.md",
    "course_code": "DIT743",
    "course_title": "Computational Methods in Bioinformatics",
    "department": "Department of Computer Science and Engineering",
    "credits": "7.5",
    "iteration": "Autumn 2025",
    "study_pace": "50%",
    "time": "Day",
    "location": "GÃ¶teborg",
    "study_form": "Campus",
    "language_of_instruction": "English",
    "duration": "3 Nov 2025 - 18 Jan 2026",
    "application_period": "17 Mar 2025 - 15 Apr 2025",
    "application_code": "GU-86067"
  },
  "sections": {
    "About": "This course demonstrates how computational methods that have been presented in other computing courses can be applied to solve problems in an application area. We look at problems related to the analysis of biological sequence data (sequence bioinformatics) and macromolecular structures (structural bioinformatics).\n\nComputing scientists need to be able to understand problems that originate in areas that may be unfamiliar to them, and to identify computational methods and approaches that can be used to solve them. Biological concepts needed to understand the problems will be introduced.\n\nReading research articles is valuable training for scientists and researchers. Developing skill in reading research articles is useful preparation for future scientific studies, and at the same time their own scientific writing can be improved. Therefore, in this course, research articles are used as the main reference material, in particular to show how to present ideas and methods, and how to critically evaluate them.\n\nComputational methods and concepts featured in this course include: dynamic programming; heuristic algorithms; graph partitioning; image skeletonisation, smoothing and edge detection; clustering; sub-matrix matching; geometric hashing; constraint logic programming; Monte Carlo optimisation; simulated annealing; selfavoiding walks.\n\nBiological problems featured in this course include: sequence alignment; domain assignment; structure comparison; comparative modelling; protein folding; fold recognition; finding channels; molecular docking; protein design.",
    "Entry requirements": "To be eligible for the course, the student should have successfully completed 60 credits of studies in Computer Science, Software Engineering, Data Science, Mathematics, Mathematical Statistics, or equivalent. Furthermore, the student should have successfully completed a course in Programming (DIT012 Imperative Programming with Basic Object-orientation, DIT042 Object-oriented Programming, DIT143 Functional programming, or equivalent) and a basic course in discrete mathematic (DIT980, DIT856 or equivalent).\n\nApplicants must prove knowledge of English: English 6/English B or the equivalent level of an internationally recognized test, for example TOEFL, IELTS",
    "Selection": "Selection is based upon the number of credits from previous university studies, maximum 285 credits",
    "Tuition": "Full education cost: 17 753 SEK\n\nFirst payment: 17 753 SEK\n\nNo fees are charged for EU and EEA citizens, Swedish residence permit holders and exchange students.\n\n[More information about tuition fees](https://www.gu.se/en/study-in-gothenburg/apply/tuition-fees)\n\nApplication closed, late application opens 15 July 2025.",
    "Additional information": "Last modified 20 February 2025"
  }
}