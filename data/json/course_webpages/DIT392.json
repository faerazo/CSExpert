{
  "metadata": {
    "source_document": "DIT392.md",
    "course_code": "DIT392",
    "course_title": "Principles of Concurrent Programming",
    "department": "Department of Computer Science and Engineering",
    "credits": "7.5",
    "iteration": "Spring 2025",
    "study_pace": "50%",
    "time": "Day",
    "location": "Göteborg",
    "study_form": "Campus",
    "language_of_instruction": "English",
    "duration": "20 Jan 2025 - 23 Mar 2025",
    "application_period": "16 Sep 2024 - 15 Oct 2024",
    "application_code": "GU-86016"
  },
  "sections": {
    "About": "Concurrent and parallel programming has become ubiquitous in modern software and systems, where concurrency is leveraged to exploit physical parallelism and speed up computations, to provide interactive multi-tasking, and to handle interaction with asynchronous external events. This course aims to provide an introduction to the principles underlying concurrent systems, as well as to practical programming solutions for modeling and exploiting concurrency in programs. Domains where such principles and practices are relevant include operating systems, distributed systems, real-timesystems, and multicore architectures.\n\nThe concepts covered in the course include:\n\n- physical vs logical parallelism\n\n- concurrency problems (race conditions, interference, deadlock, fairness, livelock).\n- mutual exclusion\n\n- shared memory synchronization (using semaphores or fine grained locking)\n\n- message-passing synchronization (using message queues)\n\nThe course illustrates practical solutions to concurrent programming using both imperative and functional programming languages. Thus, the course will also include short introductory tutorials on functional programming in general and on the functional programming language used in the course, providing sufficient background to understand and use the concurrent programming abstractions demonstrated by meansof functional languages.",
    "Entry requirements": "The student should have successfully completed at least 7.5 hec in imperative/object-oriented programming such as DIT012, DIT948 or equivalent, an additional course in programming or data structures. Moreover, the student must also have knowledge in propositional logic, which is acquired by successfully completing courses such as DIT980, DIT725, the part on introductory algebra from MMGD200, or equivalent.",
    "Selection": "Selection is based upon average grade from upper secondary school (34 %), the number of credits from previous university studies, maximum 165 credits (33 %) and Högskoleprovet - Swedish Scholastic Aptitude Test (33 %).",
    "Tuition": "Full education cost: 19 253 SEK\n\nFirst payment: 19 253 SEK\n\nNo fees are charged for EU and EEA citizens, Swedish residence permit holders and exchange students.\n\n[More information about tuition fees](https://www.gu.se/en/study-in-gothenburg/apply/tuition-fees)",
    "Additional information": "Last modified 20 February 2025"
  }
}