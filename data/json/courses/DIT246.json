{
  "metadata": {
    "source_document": "DIT246.pdf",
    "course_code": "DIT246",
    "course_title": "Empirical Software Engineering",
    "swedish_title": "Empirisk programvaruteknik",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Software Engineering",
    "specialization": "AIN, Second cycle, has only first-cycle course/s as entry requirements; A1N, Second cycle, has only first-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2020-10-27",
    "valid_from_date": "2021-08-30",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Game Design & Technology Master's Programme (N2GDT)",
      "Software Engineering and Management Master's Programme (N2SOF)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2020-10-27 to be valid from 2021-08-30, autumn semester of 2021.",
    "Position in the educational system": "The course is a compulsory course in the Software Engineering, Master's Programme.\nThe course is offered within the framework of several degree programmes. The course is\nalso a single subject course at the University of Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Applied Data Science Master's Programme (N2ADS), 3)\nGame Design & Technology Master's Programme (N2GDT) and 4) Software\nEngineering and Management Master's Programme (N2SOF)",
    "Entry requirements": "To be eligible for the course Empirical Software Engineering the student should have a\nbachelor degree in Software Engineering, Computer Science or equivalent.\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "After completion of the course the student is expected to be able to:\nKnowledge and understanding\n• describe, understand, and apply empiricism in software engineering\n• describe, understand, and partly apply the principles of case\nstudyresearch/experiments/surveys\n• describe and understand the underlying principles of meta-analytical studies\n• explain the importance of research ethics\n• state and explain the importance of threats to validity and how to control said\nthreats\n• describe and explain the concepts of probability space (incl. conditional\nprobability), random variable, expected value and random processes, and know a\nnumber of concrete examples of the concepts\n• describe Markov chain Monte Carlo methods such as Metropolis\n• describe and explain Hamiltonian Monte Carlo\n• explain and describe multicollinearity, post-treatment bias, collider bias, and\nconfounding\n• describe and explain ways to avoid overfitting\nCompetence and skills\n• assess suitability of and apply methods of analysis on data\n• analyse descriptive statistics and decide on appropriate analysis methods\n• use and interpret code of ethics for software engineering research\n• design statistical models mathematically and implement said models in a\nprogramming language\n• make use of random processes, i.e., Bernoulli, Binomial, Gaussian, and Poisson\ndistributions, with over-dispersed outcomes\n• make use of ordered categorical outcomes (ordered-logit) and predictors\n• assess suitability of, from a ontological (natural process) and epsitemological\n(maxent) perspective, various statistical distributions\n• make use of and assess directed acyclic graphs to argue causality\nJudgement and approach\n• state and discuss the tools used for data analysis and, in particular, judge their\noutput\n• judge the appropriateness of particular empirical methods and their applicability to\nattack various and disparate software engineering problems\n• question and assess common ethical issues in software engineering research\n• assess diagnostics from Hamiltonian Monte Carlo and quadratic approximation\nusing information theoretical concepts, i.e., information entropy, WAIC, and PSIS-\nLOO\n• judge posterior probability distributions for out of sample predictions and conduct\nposterior predictive checks",
    "Course content": "This course is for students who are interested in the empirical methods applied to the\nfield of software engineering. The course introduces quantitative and qualitative\nmethods in software engineering with accompanying statistical methods used for\nanalysis.\nThe course contains:\n• Descriptive and inferential statistical methods applied to software engineering.\n• Conducting qualitative and quantitative methods in software engineering.\n• Methods for analyzing quantitative and qualitative data in software engineering.\n• Usage of statistical tools.",
    "Sub-courses": "1. Assignments (Inlämningsuppgifter), 2.5 credits\nGrading scale: Pass (G) and Fail (U)\n2. Written hall examination (Skriftlig salstentamen), 5 credits\nGrading scale: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U)",
    "Form of teaching": "Lectures, laboratory work, group supervision, problem-based teaching.",
    "Assessment": "The course is examined by written lab assignment carried out in groups of normally 3-4\nstudents (2.5 hec). The assignments are graded individually, taking into account the\ngroup work as well as the student's individual contribution to the group work.\nThe course is also examined by an individual written exam carried out in an\nexamination hall (5 hec). The assignment are both theoretical and practical in nature.\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with distinction (5), Pass with credit (4), Pass (3) and\nFail (U).\nIn order to pass the course both the assignments and the written hall examination have\nto be approved. The final grade in the course is decided from the grade of the written\nhall examination.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "The course is a joint course together with Chalmers.\nCourse literature to be announced the latest 8 weeks prior to the start of the course.\nThe course replaces the course DIT278, 7.5 credits. The course cannot be included in a\ndegree which contains DIT278. Neither can the course be included in a degree which is\nbased on another degree in which the course DIT278 is included."
  }
}