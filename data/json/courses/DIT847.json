{
  "metadata": {
    "source_document": "DIT847.pdf",
    "course_code": "DIT847",
    "course_title": "Software Quality",
    "swedish_title": "Mjukvarukvalitet",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Software Engineering",
    "specialization": "A1N, Second cycle, has only first-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2014-10-27",
    "valid_from_date": "2020-08-31",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Game Design & Technology Master's Programme (N2GDT)",
      "Software Engineering Master's Programme (N2SOM)",
      "Software Engineering and Management Master's Programme (N2SOF)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2014-10-27 and was last revised on 2019-12-09 to be valid from 2020-08-\n31, autumn semester of 2020.",
    "Position in the educational system": "The course is compulsory within Software Engineering and Management Master's\nProgramme and is also a single subject course at the University of Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Game Design & Technology Master's Programme (N2GDT),\n3) Software Engineering Master's Programme (N2SOM) and 4) Software Engineering\nand Management Master's Programme (N2SOF)",
    "Entry requirements": "To be eligible for the course, the student should have a bachelor's degree in Software\nEngineering, Computer Science, Computer Engineering, Information Technology,\nInformation Systems, or equivalent.\nIn addition, the student should have completed courses in:\n• Programming (e.g. DIT042 Object-oriented Programming, DIT012 Imperative\nProgramming with Basic Object-orientation, DIT143 Functional Programming or\nequivalent) and\n• Practical software development or software engineering project (e.g. DIT212 Object-\noriented programming project, or DIT543 Software Engineering Project).\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "After completion of the course, the student is expected to be able to:\nKnowledge and understanding\n• explain fundamental concepts in software quality (e.g., internal / external quality, as\nwell as quality in use)\n• describe and explain definitions and activities related to software testing, such as\nfaults, failures levels of testing and test automation\n• explain the concept of continuous integration and relate them to software\ndevelopment processes\n• explain and discuss the importance of using statistical analysis methods to support\ndecision related to software quality\n• describe how sustainability can be seen as a quality attribute in software products\n• explain current research trends within software quality\nCompetence and skills\n• construct statistical models to analyse quality-related data from software\ndevelopment organizations, (e.g., different code review practices, quality indicators)\n• construct quality assurance plans\n• collect data to quantify and statistically analyse the quality of software products\n(e.g. based on the existing open source products)\n• construct automated measurement systems for measuring quality of software\nproducts based on the data from the modern development tools\n• use modern tools for visualization of trends in software quality\nJudgement and approach\n• assess the importance of software quality in relation to time and costs in modern\nsoftware development projects\n• relate software quality to societal aspects of software development\n• assess the risks of distinct quality assurance processes in modern software\ndevelopment companies (e.g., the impact of choosing among different testing\ntechniques)",
    "Course content": "This course is aimed at students learn modern methods of quality assurance in software\ndevelopment, such as development for embedded systems and web applications.\nThe course introduces the students to the modern methods for quality assurance in\nsoftware development, as well as methods for statistical analysis to support decisions\nrelated to software quality. The content of the course consists of lectures about relevant\nstandards (e.g. ISO/IEC 9126, ISO/IEC 9000, ISO/IEC 25000) for quality assurance and\nstandards for measurement of quality (e.g. ISO/IEC 15939).\nThe course prepares the students to work as quality engineers and quality managers in\nsoftware development organizations.",
    "Sub-courses": "1. Report (Rapport), 3 credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\nThe sub-course is a report based on statistical analysis to evaluate trade-offs\nbetween different techniques in software quality. The purpose of the sub-course is\nto assess students practical skills taught during the course.\n2. Written exam (Skriftlig salstenta), 4.5 credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\nThe sub-course is an individual, written hall exam with both theoretical and\npractical questions. The purpose of the questions is to assess the students\nknowledge of definitions and relevant research within the field.",
    "Form of teaching": "The course consists of lectures where theory is explained and practical assignments that\nfocus on the use of statistical analysis to support decisions related to software quality.\nLanguage of instruction: English",
    "Assessment": "The student is examined by an individual written report and a written exam done\nindividually in an examination hall.\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nA Pass grade (G) for the entire course requires a Pass grade for all sub-courses. A Pass\nwith Distinction grade (VG) for the entire course requires a Pass with Distinction (VG)\non both sub-courses.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information.\nThe results of and possible changes to the course will be shared with students who\nparticipated in the evaluation and students who are starting the course.",
    "Additional information": "The course is a joint course together with Chalmers.\nCourse literature to be announced the latest 8 weeks prior to the start of the course."
  }
}