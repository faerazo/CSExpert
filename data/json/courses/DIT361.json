{
  "metadata": {
    "source_document": "DIT361.pdf",
    "course_code": "DIT361",
    "course_title": "Parallel Computer Architecture",
    "swedish_title": "Parallell datorarkitektur",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science",
    "specialization": "A1F, Second cycle, has second-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2017-12-19",
    "valid_from_date": "2021-01-18",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2017-12-19 and was last revised on 2019-12-17 to be valid from 2021-01-\n18, spring semester of 2021.",
    "Position in the educational system": "The course is offered within several programmes. It is also a single subject course at the\nUniversity of Gothenburg.\n\nThe course can be part of the following programme: 1) Computer Science, Master's\nProgramme (N2COS)",
    "Entry requirements": "The course DIT051 Computer Architecture, 7.5 credits, or equivalent, is required.\n\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "After completion of the course the student should be able to:\nKnowledge and understanding\n• describe current approaches to parallel computing\n• explain the design principles of the hardware support for the shared memory and\nmessage passing programming models\n• describe the implementation of different models of thread-level parallelism, such as\ncore multithreading, chip multiprocessors, many-cores or GPGPU\n\nCompetence and skills\n• implement synchronization methods for shared memory and message passing\nparallel computers\n• design scalable parallel software and analyze its performance\n\nJudgement and approach\n• analyze the trade-offs of different approaches to parallel computing in terms of\nfunction, performance and cost",
    "Course content": "Power and temperature have joined performance as first-class design goals. High-\nperformance computing platforms now strive for the highest performance/watt. This\ncourse looks at the design of current multicore systems with an eye towards how those\ndesigns are likely to evolve over the next decade.\n\nA common thread running through all content parts is a discussion of cost tradeoffs\nwith respect to performance, power, energy, verifiability, programmability, and\nmaintainability. A second unifying theme is the memory bottleneck, and the importance\nof efficient resource management.\n\nThe lectures are complemented with several exercise sessions. Via three lab assignments,\nparticipants explore the internal architecture of modern CPUs and research the\nimplications of memory hierarchy and cache coherence.\n\nThe course also contains a written assignment in which the participants take the role of\nthe computer architect who will survey and discuss solutions to a particular problem in\nthe field of parallel computing.",
    "Sub-courses": "1. Written hall examination (Skriftlig salstentamen), 4.5 credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\n2. Project (Projekt), 1.5 credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\n3. Laboratory work (Laboration), 1.5 credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "The content is divided into several parts:\n•\na review of fundamental concepts in computer architecture basic multiprocessor\ndesigns for the message passing and shared memory programming models\n• interconnection networks, an essential component in chip multiprocessors and\nscalable parallel computer systems\n• how to correctly support parallel algorithms in shared memory hardware\n• last years' recent transition towards chip multiprocessors (also known as\n\"multicores\")\nThe course is organized into lectures, exercises, lab assignments, and a writing project,\nall of which focus on the principles and practices of parallel computer design.\n\nLanguage of instruction: English",
    "Assessment": "Written individual exam given in an examination hall, laboratory work, and multi-week\nwritten project conducted individually or in pairs.\n\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\n\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nA Pass grade (G) for the entire course requires at least a Pass grade for all sub-courses.\nTo be awarded Pass with Distinction (VG) for a full course, the student must, in\naddition, receive the grade VG on both the sub-courses Written hall examination and\nProject.",
    "Course evaluation": "The course is evaluated through a meeting after the course between teachers and student\nrepresentatives. Further, an anonymous questionnaire is used to ensure written\ninformation. The outcome of the evaluations serves to improve the course by indicating\nwhich parts could be added, improved, changed or removed.",
    "Additional information": "The course is a joint course together with Chalmers.\n\nCourse literature to be announced the latest 8 weeks prior to the start of the course.\n\nThe course replaces the course DIT360, 7.5 credits. The course cannot be included in a\ndegree which contains DIT360. Neither can the course be included in a degree which is\nbased on another degree in which the course DIT360 is included."
  }
}