{
  "metadata": {
    "source_document": "DIT311.pdf",
    "course_code": "DIT311",
    "course_title": "Models of computation",
    "swedish_title": "Beräkningsmodeller",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science",
    "specialization": "A1F, Second cycle, has second-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2017-12-19",
    "valid_from_date": "2018-08-19",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Computer Science, Bachelor's Programme (N1COS)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2017-12-19 to be valid from 2018-08-19, autumn semester of 2018.",
    "Position in the educational system": "The course is offered within several programmes. It is also a single subject course at the\nUniversity of Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS) and 2) Computer Science, Bachelor's Programme (N1COS)",
    "Entry requirements": "To be eligible to the course, the student should have successfully completed 120 credits\nof studies in Computer Science or equivalent. Specifically, the following courses are\nrequired, or equivalent:\n• 7.5 credits in discrete mathematics (e.g., DIT980 Discrete Mathematics for\nComputer Scientists)\n• 7.5 credits in functional programming (e.g., DIT143 Functional Programming or\nDIT440 Introduction to Functional Programming)\nEnglish 6/English B or the equivalent level of an internationally recognized test, for\nexample TOEFL, IELTS.",
    "Learning outcomes": "After completion of the course the student should be able to:\n\nKnowledge and understanding\n• define the notion of computable function\n• explain the Church-Turing thesis\n• explain the relationship between inductively defined sets, primitive recursion, and\nproofs by structural induction\n\nCompetence and skills\n• prove that sets are countable or uncountable, for instance by using diagonalisation\n• encode inductively defined sets in such a way that members of these sets can be used\nas inputs or outputs for programs in one or more models of computation\n• implement programs in particular, interpreters correctly in one or more models of\ncomputation\n• prove that functions are (not) computable in some models of computation\n\nJudgement and approach\n• analyse programs belonging to some models of computation\n• manipulate and analyse models of computation",
    "Course content": "This course is about the concept of \"computation\": how it can be modelled, and what its\nlimits are.\nTo avoid unnecessary complexity one often chooses to study computation via simplified,\nbut powerful, models. In the course several such models will be studied, both imperative\nand functional.\nOne or more models will be used to explore the limits of computation: problems that\ncannot be solved (within the confines of a given model), and programs that can run\narbitrary programs (modelled in a certain way).\nThe course also includes a discussion of the Church-Turing thesis, a hypothesis which\nstates, roughly, that a function is computable in a certain intuitive sense only if it can be\ndefined within one of several models of computation.",
    "Sub-courses": "1. Written examination (Skriftlig tentamen), 4.5 higher education credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\n\n2. Assignments (Inlämningsuppgifter), 3 higher education credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "Lectures and exercise sessions.\nLanguage of instruction: English",
    "Assessment": "The course is examined by an individual written examination carried out in an\nexamination hall, and by individual written assignments.\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nA Pass grade (G) for the entire course requires at least a Pass grade for all sub-courses.\nTo be awarded Pass with Distinction (VG) for a full course, the student must, in\naddition, receive the grade VG on the sub-course Written examination.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. As far as possible, evaluations ar to be completed\nelectronically. The outcome of the evaluations serves to improve the course by\nindicating which parts could be added, improved, changed or removed.",
    "Additional information": "The course is a joint course together with Chalmers.\nCourse literature to be announced the latest 8 weeks prior to the start of the course.\nThe course replaces the course DIT310, 7.5 credits. The course cannot be included in a\ndegree which contains DIT310. Neither can the course be included in a degree which is\nbased on another degree in which the course DIT310 is included."
  }
}