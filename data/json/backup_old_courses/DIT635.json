{
  "metadata": {
    "source_document": "DIT635.pdf",
    "course_code": "DIT635",
    "course_title": "Software Quality and Testing",
    "swedish_title": "Mjukvarukvalitet och testning",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "First Cycle",
    "main_field_of_study": "Software Engineering",
    "specialization": "G1F, First cycle, has less than 60 credits in\nfirst-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2017-12-19",
    "valid_from_date": "2022-01-17",
    "programmes": [
      "Software Engineering and Management Bachelor's Programme (N1SOF)",
      "Software Engineering and Management, Bachelor's Programme (N1SEM)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2017-12-19 and was last revised on 2020-10-29 to be valid from 2022-01-\n17, spring semester of 2022.",
    "Position in the educational system": "The course is compulsory within the Software Engineering and Management Bachelor's\nProgramme. It is also a single subject course at the University of Gothenburg.\nThe course can be part of the following programmes: 1) Software Engineering and\nManagement Bachelor's Programme (N1SOF) and 2) Software Engineering and\nManagement, Bachelor's Programme (N1SEM)",
    "Entry requirements": "To be eligible for this course, students must have successfully completed a 7.5 credits\ncourse in object-oriented programming (e.g., DIT042 Object-Oriented Programming,\n7.5 credits, or equivalent).\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "On successful completion of the course the student will be able to:\nKnowledge and understanding\n• explain quality assurance models in software engineering and the contents of quality\nassurance plans\n• describe the distinction between software verification and software validation\n• name and describe the basic concepts on testing, as well as different testing\ntechniques and approaches\n• describe the connection between software development phases and kinds of testing\n• exemplify and describe a number of different test methods, and be able to use them\nin practical situations\n• exemplify and describe tools used for testing software, and be able to use them and\ninterpret their output\nCompetence and skills\n• define metrics required for monitoring the quality of projects, products and\nprocesses in software engineering\n• construct appropriate and meaningful test cases, and interpret and explain (to\nstakeholders) the results of the application of such test cases (using appropriate\ntools) to practical examples\n• develop effective tests for systems at differing levels of granularity (e.g., unit and\nsystem level)\n• plan and produce appropriate documentation for testing 5. apply different testing\ntechniques on realistic examples\nJudgement and approach\n• identify emerging techniques and methods for quality management using relevant\ninformation sources\n• identify and hypothesize about sources of program failures, and reflect on how to\nbetter verify the correctness of such programs",
    "Course content": "The course introduces the students to the concepts and best practices of quality\nassurance and testing in software engineering. The course has two general themes: (1)\nthe role of quality assurance in software development; (2) the role of testing in software\nquality assurance.\nThe course introduces the notion of software quality. The students are acquainted with\nquality and quality assurance. They learn methods and techniques to assure quality of\nboth the end product (a system or application), and for the software process itself. The\nrole of quality assurance is described for software, for a software process, and for a\nsoftware project. It is explained how these are related in an organization.\nThe course covers testing tools, techniques and methods that can be used to assess the\nquality and correctness of software systems. The course brings understanding on how\nthese methods, techniques and tools can be used in a software development project to\nincrease the software quality. Students will be introduced to testing at differing levels of\ngranularity, for example, at the unit, system, or model levels. Students will be taught\nhow and when to integrate appropriate testing techniques into the development process,\nas well as how to judge the effectiveness of testing efforts.",
    "Sub-courses": "1. Written examination (Skriftlig tentamen), 4.5 credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\n2. Assignments (Inlämningsuppgifter), 3 credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "The teaching consists of lectures, exercises and examination parts, as well as supervision\nin connection to the exercises.\nLanguage of instruction: English",
    "Assessment": "The course is examined by an individual written exam carried out in an examination hall\nand written assignments carried out in groups of normally 2-3 students. The assignments\npart is examined on the basis of solutions to compulsory problems handed in during the\ncourse and on the basis of individual contribution to the group work.\nStudents are required to complete written self- and peer-assessment forms during the\ncourse which will be part of the assessment of the student's individual contribution to\nthe project.\nRetake examinations of the assignments part consist of written individual assignments.\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nA Pass grade (G) for the entire course requires at least a Pass grade for all sub-courses.\nTo be awarded Pass with Distinction (VG) for a full course, the student must, in\naddition, receive a VG on the sub-course Written examination.",
    "Course evaluation": "The course is evaluated through meeting after the course between teachers and student\nrepresentatives. Further, an anonymous questionnaire is used to ensure written\ninformation. The outcome of the evaluations serves to improve the course by indicating\nwhich parts could be added, improved, changed or removed.",
    "Additional information": "Course literature to be announced the latest 8 weeks prior to the start of the course.\nThe course replaces the course DIT085, 6.0 credits. The course cannot be included in a\ndegree which contains DIT085. Neither can the course be included in a degree which is\nbased on another degree in which the course DIT085 is included."
  }
}