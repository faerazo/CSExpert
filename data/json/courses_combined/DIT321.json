{
  "metadata": {
    "source_document": "DIT321.pdf",
    "course_code": "DIT321",
    "course_title": "Finite Automata Theory and Formal Languages",
    "swedish_title": "Finite Automata Theory and Formal Languages",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "First Cycle",
    "main_field_of_study": "Computer Science",
    "specialization": "G1F",
    "language_of_instruction": "English",
    "confirmation_date": "2006-11-17",
    "valid_from_date": "2019-01-21",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Mathematical Sciences, Master's Programme (N2MAT)",
      "Computer Science, Bachelor's Programme (N1COS)",
      "Bachelor's Programme in Mathematics (N1MAT)",
      "No translation available (NDATM)"
    ],
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by The IT Faculty Board on 2006-11-17 and was\nlast revised on 2018-03-26 by Department of Computer Science and Engineering to be\nvalid from 2019-01-21, spring semester of 2019.",
    "Position in the educational system": "The course is a part of the Computer Science Bachelor's Programme and a single subject\ncourse at the University of Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Mathematical Sciences, Master's Programme (N2MAT), 3)\nComputer Science, Bachelor's Programme (N1COS), 4) Bachelor's Programme in\nMathematics (N1MAT) and 5) No translation available (NDATM)",
    "Entry requirements": "The requirement for the course is to have successfully completed:\n- a course in discrete mathematics (as for example MMGD10 or equivalent)\n- a course in functional programming (as for example DIT440 or equivalent) or in object\noriented programming (as for example DIT011 or DIT950 or equivalent).",
    "Learning outcomes": "After completion of the course the student is expected to be able to:\nKnowledge and understanding\n• explain and manipulate the different concepts in automata theory and formal\nlanguages such as formal proofs, (non-)deterministic automata, regular expressions,\nregular languages, context-free grammars, context-free languages, Turing machines;\n• explain the power and the limitations of regular languages and context-free\nlanguages;\nSkills and abilities\n•\nprove properties of languages, grammars and automata with rigorously formal\nmathematical methods;\n• design automata, regular expressions and context-free grammars accepting or\ngenerating a certain language;\n• describe the language accepted by a automation or generated by a regular\nexpression or a context-free grammar;\n• transform between equivalent deterministic and non-deterministic finite automata,\nand regular expressions;\n• simplify automata and context-free grammars;\n• determine if a certain word belongs to a language;\n• define Turing machines performing simple tasks;\nJudgement and approach\n• differentiate and manipulate formal descriptions of languages, automata and\ngrammars with focus on regular and context-free languages, finite automata and\nregular expressions.",
    "Course content": "Formal proofs. Finite automata, regular expressions, and algorithms connecting the two\nnotions. Pumping lemma for regular languages and properties of regular languages.\nContext-free grammars. Pumping lemma for context-free languages and properties of\ncontext-free languages. If time allows the course will contain a short introduction to\npush-down automata and Turing machines.",
    "Sub-courses": "",
    "Form of teaching": "Language of instruction: English",
    "Assessment": "The course is examined by individual weekly assignments (1.5 hec) during the course\nand an individual written exam (6.0 hec) given in an examination hall at the end of the\ncourse.\nTo pass (G) the assignment part of the course the student needs to individually get at\nleast 50% of the total sum of all the weekly assignments. To get pass with distinction\n(VG) in the exam, the student needs to get at least 80% of the total points in the written\nexam.\nA student who has failed two examinations on the same material has the right to request\na change of examiner. Such a request must be submitted to the Department in writing\nand shall be granted unless there are particular reasons not to do so.\nIn cases where a course has been discontinued or has undergone major changes, students\nmust be guaranteed at least three examination opportunities (including the regular\nopportunity) based on the previous content of the course for a period of at least one\nyear.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nThe final grade on the course is based on the performance (number of points) obtained\non both the assignments and the exam parts of the course together.\nTo Pass (G) the course the student needs to pass both the assignments and the exam\nparts of the course.\nTo Pass the course with Distincion (VG) the student needs to pass both the assignments\nand the exam parts of the course and in addition the student needs to have obtained at\nleast 74% of the total number of points in the whole course (when counting assignments\nand exam together).",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "The course is a joint course together with Chalmers."
  }
}