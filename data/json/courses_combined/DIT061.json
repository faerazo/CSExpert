{
  "metadata": {
    "source_document": "DIT061.pdf",
    "course_code": "DIT061",
    "course_title": "Fault-tolerant Computer Systems",
    "swedish_title": "Fault-tolerant Computer Systems",
    "department": "Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science-Secure and Depend\nCompr Systems",
    "specialization": "AXX, Second cycle, in-depth level of the\ncourse cannot be classified",
    "language_of_instruction": "English",
    "confirmation_date": "2006-11-17",
    "valid_from_date": "2010-09-01",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Computer Science, Bachelor's Programme (N1COS)",
      "No translation available (NDATM)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by The IT Faculty Board on 2006-11-17 to be valid\nfrom 2010-09-01, autumn semester of 2010.",
    "Position in the educational system": "The course is a part of the Computer Science Masters programme and a single subject\ncourse at the University of Gothenburg.\nThis course is labelled as an AXX course.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Computer Science, Bachelor's Programme (N1COS) and 3)\nNo translation available (NDATM)",
    "Entry requirements": "To be eligible for the course\nstudents should have successfully completed two years studies within Computer Science\nor equivalent. The course DIT790 Digital- och datorteknik orEquivalent is required and\nthe course DIT151 Machine oriented programming or equivalent is recommended.",
    "Learning outcomes": "Knowledge and understanding\nAfter completing the course the student is expected to be able to:\n• Perform probabilistic dependability analysis of fault-tolerant computer system using\nfault-trees, reliability block diagrams and time-continuous Markov chains.\n• Describe the principles and properties of techniques used for error detection, error\nrecovery and error masking in computer systems.\nSkills and abilities\nAfter completing the course the student is expected to be able to:\n• Design system architectures for fault-tolerant computer systems from a given\nrequirements specification.\n• Master the terminology of dependable computing.\n• Describe the major elements of a safety case and the lifestyle model defined in IEC\n61508 standards.\nJudgement and approach\nAfter completing the course the student is expected to be able to:\n• Formulate requirements for fault-tolerant computer systems used in business, safety\nand mission critical applications.",
    "Course content": "The course covers for tolerating hardware and software faults, analysis of fault-tolerant\nsystems, project management and development processes for safety-critical systems. The\ncontent can be divided into five areas: 1. Terminology and definitions: Includes terms\nsuch as dependability, reliability, maintainability, availability and safety, taxonomies for\ndependable systems and fault models. 2. Design techniques for fault-tolerance: Fault-\ntolerance is achieved by introducing redundancy in the computer system. Various\nredundancy configurations are described. Hardware redundancy: triple modular\nredundancy (TMR), active redundancy, hot and cold standby systems, and hybrid\nredundancy. Software redundancy: N-version programming and recovery blocks. Time\nredundancy: Methods for detecting and tolerating transient faults. Information\nredundancy: parity and coding techniques for memory protection. Error detection and\nrecovery: Watchdog-timers, consistency checks, duplication and comparison, forward\nand backward recovery. Fault-tolerance in distributed systems: failure mode\nassumptions, Byzantine agreement, time-triggered systems, membership protocols, and\nclock synchronisation. 3. Analysis of fault-tolerant system: Reliability block diagrams,\nfault-trees, Markov chain models, Stochastic Petri, failure mode and effects analysis\n(FMEA), failure rate prediction for integrated circuits and fault injection. Includes two\nlaboratory classes in which Markov chain models and Stochastic Petri nets are used to\nanalyse reliability and availability of a fault-tolerant system. A special computer\nprogram is used to solve the laboratory assignments. 4. Development processes: Life-\ncycle models, hazard analysis, risk analysis, safety case and the IEC 61508 standard. 5.\nSystem examples: Fault-tolerant systems from areas such as space, aviation, road\nvehicles, telecommunication and transaction processing are described, some by guest\nlecturers from industry.",
    "Sub-courses": "",
    "Form of teaching": "Language of instruction: English\nThe course is held in English.",
    "Assessment": "The student is examined by laboratory assignment done in a group or individually and\nby a written exam. A student who has failed a test twice has the right to change\nexaminers, if it is possible. A written application should be sent to the department. In\ncases where a course has been discontinued a major changes have been made a student\nshould be guaranteed at least three examination occasions (including the ordinary\nexamination occasion) during a time of at least one year from the last time course was\ngiven.",
    "Grades": "The grading scale comprises: Fail, Pass, Pass with distinction.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire can be used\nto ensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.",
    "Additional information": ""
  }
}