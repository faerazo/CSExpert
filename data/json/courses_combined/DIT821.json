{
  "metadata": {
    "source_document": "DIT821.pdf",
    "course_code": "DIT821",
    "course_title": "Software Engineering for Al Systems",
    "swedish_title": "Software engineering för AI-system",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "First Cycle",
    "main_field_of_study": "Software Engineering",
    "specialization": "G2F, First cycle, has at least 60 credits in\nfirst-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2019-02-07",
    "valid_from_date": "2022-08-29",
    "programmes": [
      "Applied Data Science Master's Programme (N2ADS)",
      "Software Engineering and Management Bachelor's Programme (N1SOF)"
    ],
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2019-02-07 and was last revised on 2021-11-03 to be valid from 2022-08-\n29, autumn semester of 2022.",
    "Position in the educational system": "The course is offered within the N1SOF Software Engineering and Management\nBachelor's Programme.\nThe course can be part of the following programmes: 1) Applied Data Science Master's\nProgramme (N2ADS) and 2) Software Engineering and Management Bachelor's\nProgramme (N1SOF)",
    "Entry requirements": "To be eligible for this course, students must have successfully completed 90 higher\neducation credits (hec) in Software Engineering or equivalent, including 7.5 hec in basic\nprogramming (e.g., DIT043 Object-Oriented Programming, 7.5 hec), 7.5 hec on basic\nmathematical concepts such as sets, functions, relations, graphs, logarithms and proof\nby induction (e.g., DIT023 Mathematical Foundations for Software Engineering, 7.5\nhec), and 7.5 hec on data structures and algorithms (e.g., DIT182 Data Structures and\nAlgorithms, DIT374 Python for Data Scientists, 7.5 hec, or equivalent).",
    "Learning outcomes": "On successful completion of the course the student will be able to:\nKnowledge and understanding\n• explain the lifecycle of data-intensive systems, starting from data creation, to\nvalidation, processing, presentation, storage, and archiving\n•\n• explain the issues related to the integration of AI techniques in software systems,\ne.g., machine learning, data analysis, computer vision, or autonomous decision\nmaking\nname and describe different common AI techniques and to which problems they are\napplicable\n• explain the impact of different data analysis goals on the required format, content,\nand quality of the data and the applicability of different AI techniques\nCompetence and skills\n•\n•\nuse common artificial intelligence techniques to solve pre-defined problems\napply techniques to validate and deploy data-intensive AI systems in the operational\ncontext\nJudgement and approach\n• discuss the advantages and disadvantages of different patterns and architectures for\ndata-intensive systems\n• discuss the principles of learning from potentially partial or low-quality data and the\nimpact on the quality of the system\n• analyse and discuss the impact of design choices about the different steps in the data\nlifecycle on ethical issues related to the privacy and security, as well as the ethical use\nof data",
    "Course content": "This course addresses issues relevant for software engineering for systems that use\nartificial intelligence (AI) techniques such as machine learning or large-scale parallel\ndata processing. The course gives (a) an introduction of basic principles of AI, with\nemphasis on the principles and techniques used in machine learning (ML) and Deep\nLearning (DL), and (b) insights to support needed for successful implementation of AI\nsystems. The course addresses the life cycle of AI systems: It includes data preparation\n(i.e. collecting data, data processing, storage, analysis), and building AI models by\ntraining and validation. It also discusses use of data, such as implications of using\ndifferent data sets for the same goal, or using the same data set for different goals.\nFurthermore, the course discusses how software systems need to be structured and\ndeployed in order to achieve the performance required for realistic applications.\nRelevant software architectures and patterns are introduced and discussed in the context\nof a realistic application scenario. Finally, the ethical considerations in using data and\nproviding automatically-created solutions are discussed.\nThe students will learn the basic ML and DL methods, processing and analyzing data in\nrelation to the requirements, and the goals of the system implementation. Further they\nwill learn dependencies of the results to the selected data sets including its annotation.\nThe students will understand different data types, such as static, and streams, and\ndifferent type of systems that use AI techniques.",
    "Sub-courses": "1. Written exam (Tentamen), 4.5 credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\n2. Assignments (Inlämningsuppgifter), 3 credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "The teaching consists of lectures, exercises as well as supervision in connection to the\nexercises.",
    "Assessment": "The course is examined through a individual written examination carried out in an\nexamination hall at the end of the course (4.5 hec), and by completed assignments (3\nhec). The assignments are in written form, and done in pairs (two students work\ntogether).\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nA Pass grade (G) for the entire course requires at least a Pass grade for all sub-courses.\nTo be awarded Pass with Distinction (VG) for a full course, the student must, in\naddition, receive a VG on the sub-course written examination.",
    "Course evaluation": "The course is evaluated through meeting after the course between teachers and student\nrepresentatives. Further, an anonymous questionnaire is used to ensure written\ninformation. The outcome of the evaluations serves to improve the course by indicating\nwhich parts could be added, improved, changed or removed.\nCourse literature to be announced the latest 8 weeks prior to the start of the course.",
    "Additional information": "Course literature to be announced the latest 8 weeks prior to the start of the course."
  }
}