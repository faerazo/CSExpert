{
  "metadata": {
    "source_document": "DIT890.pdf",
    "course_code": "DIT890",
    "course_title": "Ubiquitous Computing",
    "swedish_title": "Ubiquitous Computing",
    "department": "Computer Science and Engineering",
    "field_of_education": "Science",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science-Interaction Design",
    "specialization": "A1F, Second cycle, has second-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2009-09-15",
    "valid_from_date": "2010-08-30",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Computer Science, Bachelor's Programme (N1COS)",
      "No translation available (NDATM)"
    ],
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by The IT Faculty Board on 2009-09-15 and was last revised on 2009-09-15 to be valid from 2010-08-30.",
    "Position in the educational system": "The course is a part of Computer Science Master's programme and as an elective course at the University of Gothenburg.\nThe level for the course in relation to degree requirements is Master's degree, code A1F.\nThe course has second cycle courses at advanced level as entry requirements.\nThe course can be part of the following programmes: 1) Computer Science, Master's Programme (N2COS), 2) Computer Science, Bachelor's Programme (N1COS) and 3) No translation available (NDATM)",
    "Entry requirements": "To be eligible for the course\nstudents should have successfully completed two years studies within the subject\nComputer Science or equivalent. Specifically the courses DIT830 Physical Computing\nand DIT860 Graphical Interfaces (or equivalent) are required.",
    "Learning outcomes": "The course focuses on the theory and practice of Ubiquitous Computing from a\nperspective of use.\nAfter completing the course the student is expected to be able to:\n• Understand and reflect on the theory and philosophy of ubiquitous computing\n• Reflect upon the effects of a society where Computational technology permeates\nevery aspect of our lifes\n• Discuss and criticise designs in the area of ubiquitous computing\n• Design Computational things using non-traditional ways of realising the interaction\nbetween man and machine\n• Understand how Computational technology can be understood and used as a\nmaterial for Design of interactive systems\n• Apply knowledge of hardware; software and other Design materials into the Design\nof artefacts with embedded information technology\n• Carry out the development of a prototype of a ubiquitous computing system from\nconcept development to working prototype\n• Present and document your work through both oral written presentations.",
    "Course content": "The concept of ubiquitous computing deals with a world where computational\ntechnology and services permeate almost everything around us, yet fulfils human needs\nfar better than most technology does today. This course aims to give insights in the\ntheory and philosophy of ubiquitous computing as well as practical skills in developing\nsuch systems. The course consists of both theoretical and practical parts. The theoretical\npart will present the history and development of ubiquitous computing from research to\napplications. Relevant technology such as sensors, actuators and various so-called smart\nmaterials will be presented from a perspective of human interaction and use. Literature\nseminars provide additional theoretical grounding and reflection. The practical part\nconsists mainly of a large project where students in small groups define and develop a\nworking prototype of an embedded computer system with novel interface components\nusing sensors and actuators, in combination with user studies.",
    "Sub-courses": "",
    "Form of teaching": "Language of instruction: English\nThe course is held in English.",
    "Assessment": "The course is examined by means of workshops (pass only), seminars (pass only), small literature home-examinations (pass only), project work and documentation (grading), and an individual written essay. A student who has failed a test twice has the right to change examiners, if it is possible. A written application should be sent to the Department.",
    "Grades": "The grading scale comprises: Fail, Pass, Pass with distinction.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between teachers and student representatives. Further, an anonymous questionnaire can be used to ensure written information. The outcome of the evaluations serves to improve the course by indicating which parts could be added, improved, changed or removed.",
    "Additional information": ""
  }
}