{
  "metadata": {
    "source_document": "DIT141.pdf",
    "course_code": "DIT141",
    "course_title": "Functional Programming",
    "swedish_title": "Functional Programming",
    "department": "Computer Science and Engineering",
    "field_of_education": "Technology 50% and Science 50%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "-",
    "specialization": "AXX, Second cycle, in-depth level of the course cannot be classified",
    "language_of_instruction": "English",
    "confirmation_date": "2006-11-17",
    "valid_from_date": "2007-08-27",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Computer Science, Bachelor's Programme (N1COS)",
      "No translation available (NDATM)"
    ],
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by The IT Faculty Board on 2006-11-17 and was\nlast revised on 2006-11-17 to be valid from 2007-08-27.",
    "Position in the educational system": "The course is a part of the Computer Science Master's programme and an elective\ncourse at Göteborg university.\nnull\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Computer Science, Bachelor's Programme (N1COS) and 3)\nNo translation available (NDATM)",
    "Entry requirements": "To be eligible for the course\nstudents should have successfully completed an education with a bachelor degree within\nComputer Science or equivalent.",
    "Learning outcomes": "After completing the course the student is expected to be able to:\n• write small- to medium-size functional programs for different kind of applications\n• use different programming techniques in a typed functional language like recursion\nand application of higher order functions\n• have some knowledge about the semantics of a functional language.",
    "Course content": "This course introduces a functional programming language and related concept to\nstudents that already have some knowledge in programming. The primary goal is to\nenable students to write realistic (small- to medium-size) programs, while introducing\nsome of the fundamental concepts of computer science. The student will learn about\nfunctional programming both from a mathematical and from a computer science view.\nThe course teaches functional programming in a problem-based manner. Some concrete\naspects seen during the course are what is a functional program functions as objects\nalgebraic and abstract data types polymorphism and classes lazy evaluations and infinite\nobjects monads",
    "Sub-courses": "",
    "Form of teaching": "Language of instruction: English",
    "Assessment": "Written exam and compulsory laboratory exercises. A student who has failed a test\ntwice has the right to change examiner, unless weighty argument can be adduced. The\napplication has to be in writing.",
    "Grades": "The grading scale comprises: Fail, Pass, Pass with distinction.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire can be used\nto ensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "The syllabus is the binding document."
  }
}