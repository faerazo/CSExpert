{
  "metadata": {
    "source_document": "DIT636.pdf",
    "course_code": "DIT636",
    "course_title": "Software Quality and Testing",
    "swedish_title": "Mjukvarukvalitet och testning",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "First Cycle",
    "main_field_of_study": "Software Engineering",
    "specialization": "G1F, First cycle, has less than 60 credits in first-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2021-10-26",
    "valid_from_date": "2023-01-16",
    "programmes": [
      "Software Engineering and Management Bachelor's Programme (N1SOF)"
    ],
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and Engineering on 2021-10-26 to be valid from 2023-01-16, spring semester of 2023.",
    "Position in the educational system": "The course is compulsory within the Software Engineering and Management Bachelor's Programme. It is also a single subject course at the University of Gothenburg.\nThe course can be part of the following programme: 1) Software Engineering and Management Bachelor's Programme (N1SOF)",
    "Entry requirements": "To be eligible for this course, students must have successfully completed a 7.5 credits course in object-oriented programming (e.g., DIT043 Object-Oriented Programming, 7.5 credits, or equivalent).\nApplicants must prove knowledge of English: English 6/English B or the equivalent level of an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "On successful completion of the course the student will be able to:\nKnowledge and understanding\n•\n• explain quality assurance models in software engineering and the contents of quality assurance plans\n• describe the distinction between software verification and software validation\nname and describe the basic concepts of testing, as well as different testing techniques and approaches\n• describe the connection between software development phases and kinds of testing\n• exemplify and describe a number of different testing methods, and be able to use them in practical situations\n• exemplify and describe tools used for testing software, and be able to use them and interpret their output\nCompetence and skills\n•\n• define metrics required for monitoring the quality of projects, products and processes in software engineering\n• construct appropriate and meaningful test cases, and interpret and explain the results of the application of such test cases (using appropriate tools) on practical examples\n• develop effective tests for systems at differing levels of granularity (e.g., unit and system level)\n• plan and produce appropriate documentation for testing\napply different testing techniques on realistic examples\nJudgement and approach\n• identify emerging techniques and methods for quality management using relevant information sources\n• identify and hypothesize about sources of program failures, and reflect on how to better verify the correctness of such programs",
    "Course content": "The course introduces the students to the concepts and best practices of quality assurance and testing in software engineering. The course has two general themes: (1) the role of quality assurance in software development; (2) the role of testing in software quality assurance.\nThe course introduces the notion of software quality. The students are acquainted with quality and quality assurance. They learn methods and techniques to assure quality of both the end product (a system or application), and for the software process itself. The role of quality assurance is described for software, for a software process, and for a software project. It is explained how these are related in an organization.\nThe course covers testing tools, techniques and methods that can be used to assess the quality and correctness of software systems. The course brings understanding on how these methods, techniques and tools can be used in a software development project to increase the software quality. Students will be introduced to testing at differing levels of granularity, for example, at the unit, system, or model levels. Students will be taught how and when to integrate appropriate testing techniques into the development process, as well as how to judge the effectiveness of testing efforts.",
    "Sub-courses": "1. Written examination (Skriftlig tentamen), 4.5 credits\nGrading scale: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U)\n2. Assignments (Inlämningsuppgifter), 3 credits\nGrading scale: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U)",
    "Form of teaching": "The teaching consists of lectures, exercises and examination parts, as well as supervision in connection to the exercises.",
    "Assessment": "The course is examined by an individual written exam carried out in an examination hall and written assignments carried out in groups. The assignments are examined on the basis of solutions to compulsory problems handed in during the course and on the basis of individual contribution to the group work.\nStudents are required to complete written self- and peer-assessment forms during the course which will be part of the assessment of the student's individual contribution to the project.\nRetake examinations of the assignments consist of written individual assignments.\nIf a student, who has failed the same examined component twice, wishes to change examiner before the next examination, a written application shall be sent to the department responsible for the course and shall be granted unless there are special reasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the student shall normally be guaranteed at least three examination occasions (including the ordinary examination) during a period of at least one year from the last time the course was given.",
    "Grades": "The grading scale comprises: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U).\nTo pass the course, all mandatory components must be passed. To earn a higher grade than Pass, a higher weighted average from the grades of the components is required.",
    "Course evaluation": "The course is evaluated through meeting after the course between teachers and student representatives. Further, an anonymous questionnaire is used to ensure written information. The outcome of the evaluations serves to improve the course by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "Course literature to be announced the latest 8 weeks prior to the start of the course.\nThe course replaces the course DIT635, 7.5 credits. The course cannot be included in a degree which contains DIT635. Neither can the course be included in a degree which is based on another degree in which the course DIT635 is included."
  }
}