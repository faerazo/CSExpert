{
  "metadata": {
    "source_document": "DIT182.pdf",
    "course_code": "DIT182",
    "course_title": "Data Structures and Algorithms",
    "swedish_title": "Datastrukturer och Algoritmer",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "First Cycle",
    "main_field_of_study": "Software Engineering",
    "specialization": "G1F, First cycle, has less than 60 credits in first-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2021-09-30",
    "valid_from_date": "2022-01-17",
    "programmes": [
      "Mathematical Sciences, Master's Programme (N2MAT)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Bachelor's Programme in Mathematics (N1MAT)",
      "Software Engineering and Management Bachelor's Programme (N1SOF)",
      "Software Engineering and Management, Bachelor's Programme (N1SEM)"
    ],
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and Engineering on 2021-09-30 to be valid from 2022-01-17, spring semester of 2022.",
    "Position in the educational system": "The course is a compulsory course in the N1SOF Software Engineering and Management Bachelor's Programme. The course is also a single subject course at the University of Gothenburg.\nThe course can be part of the following programmes: 1) Mathematical Sciences, Master's Programme (N2MAT), 2) Applied Data Science Master's Programme (N2ADS), 3) Bachelor's Programme in Mathematics (N1MAT), 4) Software Engineering and Management Bachelor's Programme (N1SOF) and 5) Software Engineering and Management, Bachelor's Programme (N1SEM)",
    "Entry requirements": "To be eligible for this course, students must have successfully completed 7.5 higher education credits in object oriented programming (for example DIT042 Object-Oriented Programming, 7.5 hec) and successfully completed 7.5 hec on basic mathematical concepts such as sets, functions, relations, graphs, logarithms and proof by induction (for example DIT022 Mathematical Foundations for Software Engineering, 7.5 hec).\nApplicants must prove knowledge of English: English 6/English B or the equivalent level of an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "On successful completion of the course the student will be able to:\nKnowledge and understanding\n•\nexplain basic abstract data types and data structures, including lists, queues, hash tables, trees, and graphs\n• explain some of the algorithms used to manipulate and query these data structures in an efficient way, and explain why they are correct\nCompetence and skills\n•\napply basic abstract data types and data structures, and algorithms related to these\n• implement and use abstract data types as interfaces, and data structures as classes, in an object-oriented programming language\n•\nuse a standard library of data structures and algorithms\n• read, specify, and describe algorithms, at a higher level of abstraction than code\nJudgement and approach\n•\nanalyse the efficiency of basic algorithms and data structures\n• make informed choices between different data structures and algorithms for different applications",
    "Course content": "Data structures and algorithms are fundamental building blocks in almost all software products. Knowledge and skills in data abstraction, data structures, and algorithms are important in the construction, use, and maintenance of adaptable, reusable, correct, and efficient program components.\nThe course gives knowledge and skills in the construction and use of algorithms and data structures, an introduction to various techniques for the analysis of algorithms, and insights in the advantages of using data abstraction in program development.\nThe following topics are covered by the course:\n• abstract data types\n• common data structures such as arrays, linked lists, unbalanced and balanced trees, heaps, and hash tables\n• how these can be used to implement abstract data types such as stacks, queues, priority queues, maps, sets, and graphs\n• standard algorithms for these data structures, including their resource demands\n• searching and sorting algorithms\n• standard libraries for data structures and algorithms\n• asymptotic efficiency and simple complexity analysis of data structures and algorithms",
    "Sub-courses": "1. Written hall examination (Skriftlig salstentamen), 4.5 credits\nGrading scale: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U)\n2. Assignments (Inlämningsuppgifter), 3 credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "The teaching consists of lectures, group work, exercises, as well as supervision in connection to the exercises.\nLanguage of instruction: English",
    "Assessment": "The course is examined by an individual written exam carried out in an examination hall, and assignments normally carried out in smaller groups.\nIf a student, who has failed the same examined component twice, wishes to change examiner before the next examination, a written application shall be sent to the department responsible for the course and shall be granted unless there are special reasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the student shall normally be guaranteed at least three examination occasions (including the ordinary examination) during a period of at least one year from the last time the course was given.",
    "Grades": "The grading scale comprises: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U).\nIn order to pass the course both the assignments and the written hall examination have to be approved. The final grade in the course is decided from the grade of the written hall examination.",
    "Course evaluation": "The course is evaluated through a meeting after the course between teachers and student representatives. Further, an anonymous questionnaire is used to ensure written information. The outcome of the evaluations serves to improve the course by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "Course literature to be announced 8 weeks prior to the start of the course.\nThe course replaces the course DIT181, 7.5 credits. The course cannot be included in a degree which contains DIT181. Neither can the course be included in a degree which is based on another degree in which the course DIT181 is included."
  }
}