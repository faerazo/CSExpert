{
  "metadata": {
    "source_document": "DIT290.pdf",
    "course_code": "DIT290",
    "course_title": "Distributed Systems, Advanced Course",
    "swedish_title": "Distributed Systems, Advanced Course",
    "department": "Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science-Networks and Distributed Systems",
    "specialization": "A1F, Second cycle, has second-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2009-05-20",
    "valid_from_date": "2017-08-20",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Software Engineering Master's Programme (N2SOM)",
      "Computer Science, Bachelor's Programme (N1COS)",
      "No translation available (NDATM)"
    ],
    "iteration": "Spring 2025",
    "study_pace": "50%",
    "time": "Day",
    "location": "Göteborg",
    "study_form": "Campus",
    "duration": "20 Jan 2025 - 23 Mar 2025",
    "application_period": "16 Sep 2024 - 15 Oct 2024",
    "application_code": "GU-86037",
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by The IT Faculty Board on 2009-05-20 and was\nlast revised on 2017-06-16 by Department of Computer Science and Engineering to be\nvalid from 2017-08-20, autumn semester of 2017.",
    "Position in the educational system": "The course is a part of the Computer Science Master's programme and an single subject\ncourse at the University of Gothenburg.\nnull\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Applied Data Science Master's Programme (N2ADS), 3)\nSoftware Engineering Master's Programme (N2SOM), 4) Computer Science, Bachelor's\nProgramme (N1COS) and 5) No translation available (NDATM)",
    "Entry requirements": "To be eligible for the course\nstudents should have successfully completed a first year studies within the subject\nComputer Science or equivalent. Specifically, the course DIT240 Distributed systems is\nrequired.\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "After completing the course the student is expected to be able to:\n• Understand and solve problems that Distributed systems like P2P; collaborative\nenvironment systems or even parts of the core Internet technology have to solve in\norder to be able to function efficiently and correctly.\nThe student will also be able to combine theoretical studies with their respective\napplication oriented consequences.",
    "Course content": "In this course the students first will get to know the points of inherent difference and\nstrength of distributed systems compared with sequential or strongly-coupled systems;\nconsequently, the aim of the course is to teach the students to study the issues and\nproblems that have to be addressed and solved efficiently for these differences to be\ntaken advantage of, so that the system retains its strength and high potential. In\nparticular, we will address and study the following issues in distributed systems:\nSynchronization: Continuation (after the course DIT240 Distributed systems ) of the\nstudy of distributed clock-synchronization and its uses in mutual exclusion; study about\nresource allocation in general. Advance one step further, to see how to get solutions\nwithout the need for clock synchronisation (and hence of lower cost in practice).\nReplication: The advantages and costs of replicating data: the potential improvement in\nresponse times and reliability, and the extra communication costs involved in keeping\ndata consistent. Concurrency control: Study of different types of locking, deadlock\ndetection. Additionally, study of concurrency control methods without locking.\nRecovery and Fault Tolerance: Check-pointing, optimistic and pessimistic recovery\ncontrol. Fault-tolerant Agreement in Distributed Systems: (a very special and significant\nproblem, since it is a key issue in most synchronization and coordination problems in\ndistributed systems) Study of the basic impossibility results and discuss their\nimplications; proceed with solutions and protocols for systems with certain strengths\nand design structures. Distributed Shared Memory: The difference between shared-\nmemory-based programming and message-passing-based programming; types of\nconsistency; write-update and write-invalidate protocols.",
    "Sub-courses": "",
    "Form of teaching": "Language of instruction: English",
    "Assessment": "There will be a final written examination, as well as a couple of assignments during the\nterm, in combination with 2 practical projects. A student who has failed a test twice has\nthe right to change examiner, unless weighty argument can be adduced. The application\nshall be sent to the department and has to be in writing.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire can be used\nto ensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "Faculty Board of IT University.\n\nLast modified: 15 January 2025",
    "Selection": "Selection is based upon the number of credits from previous university studies, maximum 285 credits",
    "Tuition": "Full education cost: 19 253 SEK\n\nFirst payment: 19 253 SEK\n\n**No fees** are charged for EU and EEA citizens, Swedish residence permit holders and exchange students.\n\n[More information about tuition fees](https://www.gu.se/en/study-in-gothenburg/apply/tuition-fees)"
  }
}