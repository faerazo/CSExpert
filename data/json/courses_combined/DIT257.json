{
  "metadata": {
    "source_document": "DIT257.pdf",
    "course_code": "DIT257",
    "course_title": "Agile software project management",
    "swedish_title": "Agil projektledning",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "First Cycle",
    "main_field_of_study": "Computer Science",
    "specialization": "G2F, First cycle, has at least 60 credits in first-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2022-11-23",
    "valid_from_date": "2023-08-28",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Computer Science, Bachelor's Programme (N1COS)"
    ],
    "iteration": "Autumn 2025",
    "study_pace": "50%",
    "time": "Day",
    "location": "Göteborg",
    "study_form": "Campus",
    "duration": "1 Sep 2025 - 2 Nov 2025",
    "application_period": "17 Mar 2025 - 15 Apr 2025",
    "application_code": "GU-86040"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2019-11-18 and was last revised on 2022-11-23 to be valid from 2023-08-\n28, autumn semester of 2023.",
    "Position in the educational system": "The course is offered within the framework of several degree programmes. The course is\nalso a single subject course at the University of Gothenburg. The course is part of the\nfollowing programmes: 1) Computer Science, Master's Programme and 2) Computer\nScience, Bachelor's Programme\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Applied Data Science Master's Programme (N2ADS) and 3)\nComputer Science, Bachelor's Programme (N1COS)\nMain field of studies\nComputer Science\nSpecialization\nG2F, First cycle, has at least 60 credits in\nfirst-cycle course/s as entry requirements",
    "Entry requirements": "To be eligible for the course, the student must have completed courses in programming\nfor at least 15 HEC, e.g., two of DIT440, DIT012, or DIT953.",
    "Learning outcomes": "After completion of the course the student is expected to be able to:\nKnowledge and understanding\n• describe software engineering as an engineering discipline by using relevant\nterminology\n• describe the relationship between stakeholder, product, and process\nCompetence and skills\n• specify, implement, and evaluate a system based on what different stakeholders\nperceive as valuable\n• learn tools and APIs which are relevant for the project in collaboration with the\nother team members\n• apply a structured software development process as a member of a team\nJudgement and approach\n• reflect on how the software development process was applied in a project\n• reflect on your own and the team's learning strategies",
    "Course content": "The course provides a practical introduction to Software Engineering. Students work on\nan open problem that is defined by stakeholders outside of the students' team. This\nmeans that students will not be able to define the project they work on themselves. By\niteratively planning and evaluating their work, they organise themselves in order to\nreach a joint goal with limited resources. To do this, they apply an agile software\ndevelopment process to structure their work. They specify and evaluate requirements\nand the collaboration with stakeholders to assure that what is being delivered is\nperceived as valuable. Students reflect on their own work and learning every week to\nenable a continuous improvement of their way of working. At the same time, they\nacquire skills and knowledge in new technologies, tools, and fitting ways to use them in\norder to provide value to a stakeholder based on the students' own learning strategies.",
    "Sub-courses": "1. Project (Projekt), 7.5 credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "The course is organized as a project where the students work in teams of usually six\nstudents to address a real-world software engineering task. The teams have weekly\nsupervision meetings. The project is supplemented by lectures that provide insight into\nthe task the students are working on and software engineering in general.",
    "Assessment": "The course is assessed continuously through a weekly report. The report contains both a\njoint team part and an individual part for each team member which documents the\nproject's progress. The final grade will be based on the last version of the report\naccording to the grading criteria below. Students thus iteratively and incrementally add\nto their reflections throughout the project. The content and structure of the report is\naligned with the intended learning outcomes. The teachers supply detailed questions and\ntopics to reflect on for each course instance.\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass (G) and Fail (U).\nThe grading scale comprises: Pass (G) and Fail (U).\nAn individual passes the course when both the team part and the individual part are\npassed.\nThe team part consists of a final report that summarises and synthesises the weekly\nreflections. The reflections should clearly detail the teams' own experiences, the\nproposed changes to improve on the topic, how the changes were evaluated (KPIs,\nacceptance testing etc.) and subsequent experiences and changes. In addition, the team\nneeds to submit the source code, tests, a breakdown of contributions, the technical\ndocumentation, instructions on how to install and use the product, an executable if\napplicable (such as an apk- or jar-file) as well as the weekly reflections.\nThe individual part consists of weekly reflections, source code contributions, and a peer\nassessment. Complete weekly individual reflections have to be submitted. Students need\nto reflect on their own learning and how the individual themself contributed to the\nprocess and to the team. There should be a record that shows that an individual has also\ncontributed to the source code and the peer assessment should indicate that the\nindividual participated in a meaningful way.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed. The\nresults of and possible changes to the course will be shared with students who\nparticipated in the evaluation and students who are starting the course.",
    "Additional information": "The course is a joint course together with Chalmers.\nCourse literature will be announced at the latest 8 weeks prior to the start of the course.\nThe course replaces the course DIT543 Software engineering project, 7.5 credits. The\ncourse cannot be included in a degree which contains DIT543. Neither can the course be\nincluded in a degree which is based on another degree in which the course DIT543 is\nincluded\n\nLast modified 20 February 2025",
    "Selection": "Selection is based upon the number of credits from previous university studies, maximum 165 credits.",
    "Tuition": "Full education cost: 17 753 SEK\n\nFirst payment: 17 753 SEK\n\n**No fees** are charged for EU and EEA citizens, Swedish residence permit holders and exchange students.\n\n[More information about tuition fees](https://www.gu.se/en/study-in-gothenburg/apply/tuition-fees)"
  }
}