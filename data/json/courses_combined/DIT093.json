{
  "metadata": {
    "source_document": "DIT093.pdf",
    "course_code": "DIT093",
    "course_title": "Algorithms",
    "swedish_title": "Algoritmer",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science",
    "specialization": "AXX, Second cycle, in-depth level of the course cannot be classified",
    "language_of_instruction": "English",
    "confirmation_date": "2020-12-18",
    "valid_from_date": "2023-08-28",
    "programmes": [
      "Mathematical Sciences, Master's Programme (N2MAT)",
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Bachelor's Programme in Mathematics (N1MAT)",
      "Computer Science, Bachelor's Programme (N1COS)"
    ],
    "iteration": "Spring 2025",
    "study_pace": "50%",
    "time": "Day",
    "location": "Göteborg",
    "study_form": "Campus",
    "duration": "20 Jan 2025 - 23 Mar 2025",
    "application_period": "16 Sep 2024 - 15 Oct 2024",
    "application_code": "GU-86000"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and Engineering on 2020-12-18 and was last revised on 2022-11-15 to be valid from 2023-08- 28, autumn semester of 2023.",
    "Position in the educational system": "The course is offered within the framework of several degree programmes. The course is also a single subject course at the University of Gothenburg.\n\nThe course can be part of the following programmes: 1) Mathematical Sciences,\nMaster's Programme (N2MAT), 2) Computer Science, Master's Programme (N2COS),\n3) Applied Data Science Master's Programme (N2ADS), 4) Bachelor's Programme in\nMathematics (N1MAT) and 5) Computer Science, Bachelor's Programme (N1COS)",
    "Entry requirements": "The requirement for the course is to have successfully completed coursers corresponding to 120 hp in the subject Computer Science or Mathematics including:\n\n• 7.5 hec in discrete mathematics (DIT980 Discrete Mathematics for Computer\nScientists, or the sub-course Introductory Algebra of MMG200 Mathematics I, or\nequivalent),\n• additionally 10 hec in mathematics,\n• 7.5 hec in imperative or object oriented programming (DIT012 Imperative Programming with Basic Object-orientation, or equivalent),\n• additionally 7.5 hec in programming,\n• 7.5 hec in data structures (DIT960 Data Structures, DIT375 Python for Data\nScientists or equivalent).\nApplicants must prove knowledge of English: English 6/English B or the equivalent level of an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "On successful completion of the course the student will be able to:\n\nKnowledge and understanding\n• describe algorithms and their qualities: explain algorithms in writing, so that others can understand how they work, why they are correct and fast, and where they are useful;\n• recognize and formalize non-trivial computational problems that appear in various real-world computer applications and which need to be solved by algorithms;\n• intractability: recognize intractable problems and other classes of problems like P,NP, NPC;\n• prove the correctness of algorithms.\n\nCompetence and skills\n• design: apply the main design techniques for efficient algorithms (for instance greedy, dynamic programming, divide-and-conquer) to problems which are similar to the textbook examples but new;\n• perform in simple cases the whole development cycle of algorithms: problem analysis, choosing, modifying and combining suitable techniques and data structures, analysis of correctness and complexity, looking for possible improvements, etc;\n• perform simple reductions between problems, explain NP completeness, recognize various computationally hard problems which tend to appear over and over again in different applications,\n\nJudgement and approach\n• critically assess algorithmic ideas and demonstrate the ability to see through obvious and seemingly plausible algorithms that often turn out to be incorrect;\n• analyse: explain why the time efficiency of algorithms is crucial, express the time complexity in a rigorous and scientifically sound manner, analyze the time complexity of algorithms (sum up operations in nested loops, solve standard recurrences, etc.) i.e. perform an objective evaluation of the performance and be able to compare it to other algorithms performance.",
    "Course content": "The course topics are as follows:\n• What is an efficient algorithm?\n• Tools for analysis of algorithms. O-notation. Analyzing loops and recursive calls.\n• Solving recurrence relations.\n• Data structures and algorithms. Review of basic data structures.\n• Graph algorithms.\n• Greedy algorithms.\n• Divide-and-conquer.\n• Dynamic programming.\n• Exhaustive search.\n• Basic complexity theory. Complexity classes P, NP, and NPC, reductions.\nExamples of NP-complete problems. Coping with hard problems.\n• Combine different design techniques and data structures.\n• Short orientation about other design techniques: e.g. randomized algorithms,\npreprocessing, and others.",
    "Sub-courses": "1. Examination (Tentamen), 7.5 credits\nGrading scale: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U)",
    "Form of teaching": "The course is given as lectures, combined with exercise sessions for problem solving related to the course and and a number of assignments intended to develop the skill of analyzing and designing algorithms.\n\nLanguage of instruction: English",
    "Assessment": "The course is examined by an individual written hall-exam.\n\nIf a student, who has failed the same examined component twice, wishes to change examiner before the next examination, a written application shall be sent to the department responsible for the course and shall be granted unless there are special reasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\n\nIn cases where a course has been discontinued or has undergone major changes, the student shall normally be guaranteed at least three examination occasions (including the ordinary examination) during a period of at least one year from the last time the course was given.",
    "Grades": "The grading scale comprises: Pass with distinction (5), Pass with credit (4), Pass (3) and Fail (U).\nThe grading scale comprises Fail (U), 3, 4 or 5, according to the results of the written exam.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between teachers and student representatives. Further, an anonymous questionnaire is used to ensure written information. The outcome of the evaluations serves to improve the course by indicating which parts could be added, improved, changed or removed.",
    "Additional information": "The course replaces the DIT602 Algorithms 7,5 hp course. The course cannot be included in a degree which contains DIT602. Neither can the course be included in a degree which is based on another degree in which the course DIT602 is included.\n\nThe course is a joint course together with Chalmers.\n\nCourse literature to be announced the latest 8 weeks prior to the start of the course.\n\nLast modified\n\n20 February 2025",
    "Selection": "Selection is based upon the number of credits from previous university studies, maximum 285 credits",
    "Tuition": "Full education cost: 19 253 SEK\n\nFirst payment: 19 253 SEK\n\nNo fees are charged for EU and EEA citizens, Swedish residence permit holders and exchange students.\n\n[More information about tuition fees](https://www.gu.se/en/study-in-gothenburg/apply/tuition-fees)"
  }
}