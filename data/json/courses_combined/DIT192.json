{
  "metadata": {
    "source_document": "DIT192.pdf",
    "course_code": "DIT192",
    "course_title": "Agile Development Processes",
    "swedish_title": "Agila utvecklingsprocesser",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": [
      "Interaction Design",
      "Computer Science",
      "Software Engineering"
    ],
    "specialization": "AXX, Second cycle, in-depth level of the course cannot be classified",
    "language_of_instruction": "English",
    "confirmation_date": "2019-04-15",
    "valid_from_date": "2021-01-18",
    "programmes": [
      "Computer Science, Master's Programme (N2COS)",
      "Applied Data Science Master's Programme (N2ADS)",
      "Game Design & Technology Master's Programme (N2GDT)",
      "Software Engineering and Management Master's Programme (N2SOF)"
    ]
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2019-04-15 and was last revised on 2019-12-16 to be valid from 2021-01-\n18, spring semester of 2021.",
    "Position in the educational system": "The course is compulsory within the Game Design & Technology Master's Programme\nand is offered within several programmes. It is also a single subject course at the\nUniversity of Gothenburg.\nThe course can be part of the following programmes: 1) Computer Science, Master's\nProgramme (N2COS), 2) Applied Data Science Master's Programme (N2ADS), 3)\nGame Design & Technology Master's Programme (N2GDT) and 4) Software\nEngineering and Management Master's Programme (N2SOF)",
    "Entry requirements": "To be eligible for this course the student should have\n• a bachelor degree\n• a successfully completed course in programming (e.g., DIT042 Object-oriented\nProgramming, DIT012 Imperative Programming with Basic Object-orientation,\nDIT143 Functional Programming, or equivalent);\n• a successfully completed project course (or bachelor thesis) in applied software\ndevelopment or software engineering (e.g., DIT212 Object-oriented programming\nproject, or DIT543 Software Engineering Project).\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "On successful completion of the course the student will be able to:\n\nKnowledge and understanding\n• compare agile and more traditional software development, relate lean and agile\ndevelopment, and contrast different agile methodologies for the development of\nsoftware systems\n• use the agile manifest and its accompanying principles\n• discuss what is different when leading an agile compared to traditional teams\n• explain how software development can be seen as primarily people- and\ncommunication-centric\n• explain how to scale agile principles and development methods for large\norganizations\n• explain major roles in the agile development process and discuss various levels of\nauthority of team leadership\n• describe the SAFe framework\n• describe an agile transformation in traditional software companies\n\nCompetence and skills\n• organize an agile team to maximise its productivity and facilitate communication\nbetween people\n• collaborate and apply agile way or working in small software development teams\n• interact and show progress continuosly with a customer or user\n• develop programs using small and frequent iterations in a way that facilitates\nbuilding in quality from the start\n• use test-driven development and test automation, refactor a program and a design,\nand conduct incremental planning using user stories\n• identify and eliminate waste (i.e. unnecessary activities) in the software development\nprocess\n• design measurement system to follow continuous improvement of teams'\nperformance\n\nJudgement and approach\n• explain how software development can be seen as primarily people- and\ncommunication-centric\n• describe why no single methodology can fit all projects or contexts\n• critically assess agile development methods given a certain context and identify\ncommon misconceptions\n• identify major dysfunctions of the teams and phases they go through during agile\ntransformation- recognize what motivates people for their best performance",
    "Course content": "Agile software development aims at setting up an environment to develop software\nbased on the following principles from the agile manifesto:\n\n• Individuals and interactions is valued more than processes and tools\n• Working software is valued more than comprehensive documentation\n• Customer collaboration is valued more than contract negotiation\n• Responding to change is valued more than following a plan\nAt the core of these principles is the realization that changes are inevitable and the\nconclusion that change management needs to be integrated into the development\nprocess. Agile approaches promotes iterative and incremental development by using a\nvery tight design-code-test cycle.\nIn this interactive course we will explore together how to apply these agile principles to\ndevelop software and manage projects.\n\nThe course covers:\n• Principles and practices of agile methods such as XP, Scrum and Lean\n• Testing and test automation on both unit and system levels\n• Communication- and people-centric software development\n• Agile methods in relation to more traditional, plan-based methods\n• Criticism to agile development methods\n• Leading agile development projects and identifying the most important roles\n• Scaling agile principles and practices to large organizations\n• Measuring key performance indicators (KPIs) of agile teams",
    "Sub-courses": "1. Written hall examination (Skriftlig salstentamen), 3 credits\nGrading scale: Pass with Distinction (VG), Pass (G) and Fail (U)\n\n2. Project (Projekt), 4.5 credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "The course consists of lectures, and a project part where software is developed using\nagile approaches.\n\nLanguage of instruction: English",
    "Assessment": "The course is examined by a project. The project is carried out in groups of normally 4-6\nstudents. The project grades are individual based on involving the following:\n\n• The student's active role in the team work.\n• An oral presentation of the project status and/or results.\n• An individual written report.\n• Participation in the project acceptance tests.\nThe course is also examined by a individual written exam carried out in an examination\nhall.\n\nIf a student, who has failed the same examined component twice, wishes to change\nexaminer before the next examination, a written application shall be sent to the\ndepartment responsible for the course and shall be granted unless there are special\nreasons to the contrary (Chapter 6, Section 22 of Higher Education Ordinance).\n\nIn cases where a course has been discontinued or has undergone major changes, the\nstudent shall normally be guaranteed at least three examination occasions (including the\nordinary examination) during a period of at least one year from the last time the course\nwas given.",
    "Grades": "The grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nThe grading scale comprises: Pass with Distinction (VG), Pass (G) and Fail (U).\nA Pass grade (G) for the entire course requires at least a Pass grade for all sub-courses.\nA Pass with Distinction grade (VG) for the entire course requires, in addition to at least\na Pass grade for all sub-courses, a Pass with Distinction (VG) on the sub-course Written\nexam.",
    "Course evaluation": "The course is evaluated through meeting after the course between teachers and student\nrepresentatives. Further, an anonymous questionnaire is used to ensure written\ninformation. The outcome of the evaluations serves to improve the course by indicating\nwhich parts could be added, improved, changed or removed.",
    "Additional information": "The course is a joint course together with Chalmers.\nCourse literature to be announced the latest 8 weeks prior to the start of the course.\nThe course replaces the course DIT191 Agile Development Processes, 7.5 credits. The\ncourse cannot be included in a degree which contains DIT191. Neither can the course be\nincluded in a degree which is based on another degree in which the course DIT191 is\nincluded."
  }
}