{
  "metadata": {
    "source_document": "DIT376.pdf",
    "course_code": "DIT376",
    "course_title": "Python for data science",
    "swedish_title": "Python för data science",
    "department": "Department of Computer Science and Engineering",
    "field_of_education": "Science 100%",
    "credits": "7.5",
    "cycle": "Second Cycle",
    "main_field_of_study": "Computer Science, Data Science",
    "specialization": "A1N, Second cycle, has only first-cycle course/s as entry requirements",
    "language_of_instruction": "English",
    "confirmation_date": "2022-11-15",
    "valid_from_date": "2023-08-28",
    "programmes": [
      "Applied Data Science Master's Programme (N2ADS)"
    ],
    "content_type": "course"
  },
  "sections": {
    "Confirmation": "This course syllabus was confirmed by Department of Computer Science and\nEngineering on 2022-11-15 to be valid from 2023-08-28, autumn semester of 2023.",
    "Position in the educational system": "The course can be part of the following programme: 1) Applied Data Science Master's\nProgramme (N2ADS)\nMain field of studies\nComputer Science\nData Science\nSpecialization\nA1N, Second cycle, has only first-cycle\ncourse/s as entry requirements\nA1N, Second cycle, has only first-cycle\ncourse/s as entry requirements",
    "Entry requirements": "To be eligible in the course, the student needs a bachelor degree. Furthermore, the\nstudent needs 7.5 hec programming.\nApplicants must prove knowledge of English: English 6/English B or the equivalent level\nof an internationally recognized test, for example TOEFL, IELTS.",
    "Learning outcomes": "On successful completion of the course the student will be able to:\nThe course is a combination of a continuation course in programming, object oriented\nprogramming, data structures, foremost from the perspective of data science, including\na short orientation about algorithms and algorithm design principles. The language in\nthis course is Python which is the most common language in the area of data science.\nThe course provides a good foundation for further studies in the area of data science.\nKnowledge and understanding\n• explain the basics about classes and objects;\n• explain some basic abstract data types and data structures, including lists, queues,\nhash tables, trees and graphs;\n• explain some of the algorithms used to manipulate and query these data structures\nin an efficient way, for example for sorting and searching, and being able to use the\nrespective standard libraries in Python.\nCompetence and skills\n• make efficient use of predefined data structures in Python;\n• construct simple programs using classes and objects;\n• use a standard library of data structures and algorithms in Python for solving tasks\nwithin the area of data science.\nJudgement and approach\n•\ncompare and value different aspects of program structures;\n• analyse the efficiency of different algorithms, for example searching and sorting\nalgorithms;\n• make informed choices between different data structures and algorithms for\ndifferent applications, in particual those relevant for data science.",
    "Course content": "The course covers the following topics:\n• basic data types in Python,\n• basic constructs of programming language such as expressions and control\nstructures,\n• Object oriented design in Python and basic object oriented programming including\nexamples from the area of data science,\n• common data structures such as arrays, lists, and hash tables,\n• stacks, queues, priority queues, maps, sets, tees and graphs,\n• standard algorithms for these data structures, including their resource demands,\n• searching and sorting,\n• asymptotic efficiency and simple complexity analysi,\n• standard libraries for data structures and algorithms, in particular those that are\nrelvant from a data science perspective,\n• an orientation about algorithms and algorithm design principles",
    "Sub-courses": "1. Assignments (Inlämningsuppgifter), 7.5 credits\nGrading scale: Pass (G) and Fail (U)",
    "Form of teaching": "Lectures and programming assignments",
    "Assessment": "Compulsory programming assignments (both indivudal assignments and assignments\ndone in groups).\nIf a student, who has failed the same examined element on two occasions, wishes to\nchange examiner before the next examination session, such a request is to be submitted\nto the department in writing and granted unless there are special reasons to the contrary\n(Chapter 6, Section 22 of Higher Education Ordinance).\nIn the event that a course has ceased or undergone major changes, students are to be\nguaranteed at least three examination sessions (including the ordinary examination\nsession) over a period of at least one year, though at most two years after the course has\nceased/been changed. The same applies to work experience and VFU, although this is\nrestricted to just one additional examination session.",
    "Grades": "The grading scale comprises: Pass (G) and Fail (U).\nA passing grade for the entire course requires at least a passing grade for all\nassignments.",
    "Course evaluation": "The course is evaluated through meetings both during and after the course between\nteachers and student representatives. Further, an anonymous questionnaire is used to\nensure written information. The outcome of the evaluations serves to improve the\ncourse by indicating which parts could be added, improved, changed or removed.\nThe results of and possible changes to the course will be shared with students who\nparticipated in the evaluation and students who are starting the course.",
    "Additional information": "Course literature to be announced the latest 8 weeks prior to the start of the course.\nThe course replaces the course DIT375, 7.5 credits. The course cannot be included in a\ndegree which contains DIT375. Neither can the course be included in a degree which is\nbased on another degree in which the course DIT375 is included."
  }
}